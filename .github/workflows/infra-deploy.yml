name: Terraform + Helm Deploy with Steps

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2
  CLUSTER_NAME: daenamu-test

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.1

      # provider 충돌 방지: Kubernetes/Helm provider 제거
      - name: Temporarily disable kube_providers.tf
        run: |
          mkdir -p skipped
          mv kube_providers.tf skipped/ || true

      - name: Terraform Init
        run: terraform init

      - name: Import IAM resources (safe minimal version)
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          terraform import aws_iam_role.cluster daenamu-test-eks-cluster-role || true
          terraform import aws_iam_role.node_group daenamu-test-node-group-role || true
          terraform import aws_iam_instance_profile.node_group daenamu-test-node-group-instance-profile || true
          terraform import aws_iam_role.alb_sa_role AmazonEKSLoadBalancerControllerRole || true
          terraform import aws_iam_policy.alb_policy arn:aws:iam::${AWS_ACCOUNT_ID}:policy/AWSLoadBalancerControllerIAMPolicy || true

      # - name: Terraform Plan
      #   run: terraform plan -out=tfplan

      - name: Create steps.sh dynamically with loop (EKS)
        run: |
          echo '#!/bin/bash' > steps.sh
          echo 'set -ex' >> steps.sh
          for i in 1 2 3 4 5 9; do
            echo "./step${i}.sh" >> steps.sh
          done
          chmod +x steps.sh

      - name: Run Steps
        run: ./steps.sh

      - name: Update Kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --name ${{ env.CLUSTER_NAME }} \
            --region ${{ env.AWS_REGION }}

      # 복원 후 Helm, Kubernetes 리소스 문제 없이 처리
      - name: Restore kube_providers.tf
        run: |
          mv skipped/kube_providers.tf . || true

      # - name: Terraform Plan (with K8s/Helm)
      #   run: terraform plan -out=tfplan-k8s

      - name: Create steps_helm.sh dynamically with loop (Helm)
        run: |
          echo '#!/bin/bash' > steps_helm.sh
          echo 'set -ex' >> steps_helm.sh
          for i in 6 7 10; do
            echo "./step${i}.sh" >> steps_helm.sh
          done
          chmod +x steps_helm.sh

      - name: Run Helm/K8s steps
        run: ./steps_helm.sh

      # - name: Install Helm
      #   run: |
      #     curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

